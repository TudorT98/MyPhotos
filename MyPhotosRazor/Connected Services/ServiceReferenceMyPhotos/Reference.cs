//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Event : object
    {
        
        private string EventDescriptionField;
        
        private string EventNameField;
        
        private int IdField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> PhotoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription
        {
            get
            {
                return this.EventDescriptionField;
            }
            set
            {
                this.EventDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName
        {
            get
            {
                return this.EventNameField;
            }
            set
            {
                this.EventNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Photo : object
    {
        
        private ServiceReferenceMyPhotos.Event EventField;
        
        private int EventIdField;
        
        private string FullPathField;
        
        private int IdField;
        
        private ServiceReferenceMyPhotos.LandScape LandScapeField;
        
        private int LandScapeIdField;
        
        private ServiceReferenceMyPhotos.Location LocationField;
        
        private int LocationIdField;
        
        private ServiceReferenceMyPhotos.Person PersonField;
        
        private int PersonIdField;
        
        private string isMovieField;
        
        private string isRemovedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Event Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId
        {
            get
            {
                return this.EventIdField;
            }
            set
            {
                this.EventIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullPath
        {
            get
            {
                return this.FullPathField;
            }
            set
            {
                this.FullPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.LandScape LandScape
        {
            get
            {
                return this.LandScapeField;
            }
            set
            {
                this.LandScapeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandScapeId
        {
            get
            {
                return this.LandScapeIdField;
            }
            set
            {
                this.LandScapeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId
        {
            get
            {
                return this.LocationIdField;
            }
            set
            {
                this.LocationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Person Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId
        {
            get
            {
                return this.PersonIdField;
            }
            set
            {
                this.PersonIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isMovie
        {
            get
            {
                return this.isMovieField;
            }
            set
            {
                this.isMovieField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isRemoved
        {
            get
            {
                return this.isRemovedField;
            }
            set
            {
                this.isRemovedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LandScape", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class LandScape : object
    {
        
        private int IdField;
        
        private string LandScapeDescriptionField;
        
        private string LandScapeNameField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> PhotoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandScapeDescription
        {
            get
            {
                return this.LandScapeDescriptionField;
            }
            set
            {
                this.LandScapeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandScapeName
        {
            get
            {
                return this.LandScapeNameField;
            }
            set
            {
                this.LandScapeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Location : object
    {
        
        private int IdField;
        
        private string LocationDescriptionField;
        
        private string LocationNameField;
        
        private string LocationTypeField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> PhotoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescription
        {
            get
            {
                return this.LocationDescriptionField;
            }
            set
            {
                this.LocationDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationType
        {
            get
            {
                return this.LocationTypeField;
            }
            set
            {
                this.LocationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Person : object
    {
        
        private string AgeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> PhotoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                this.AgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo> Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotos.IMyPhotos")]
    public interface IMyPhotos
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/AddEvent", ReplyAction="http://tempuri.org/InterfaceEvent/AddEventResponse")]
        System.Threading.Tasks.Task<bool> AddEventAsync(ServiceReferenceMyPhotos.Event @event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/UpdateEvent", ReplyAction="http://tempuri.org/InterfaceEvent/UpdateEventResponse")]
        System.Threading.Tasks.Task<bool> UpdateEventAsync(ServiceReferenceMyPhotos.Event @event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/DeleteEvent", ReplyAction="http://tempuri.org/InterfaceEvent/DeleteEventResponse")]
        System.Threading.Tasks.Task<bool> DeleteEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventByName", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Event> GetEventByNameAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventsName", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventsNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetEventsNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEvents", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Event>> GetEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventById", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Event> GetEventByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventIdByName", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetEventIdByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/AddLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/AddLandScapeResponse")]
        System.Threading.Tasks.Task<bool> AddLandScapeAsync(ServiceReferenceMyPhotos.LandScape landScape);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/UpdateLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/UpdateLandScapeResponse")]
        System.Threading.Tasks.Task<bool> UpdateLandScapeAsync(ServiceReferenceMyPhotos.LandScape landScape);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/DeleteLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/DeleteLandScapeResponse")]
        System.Threading.Tasks.Task<bool> DeleteLandScapeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapeByName", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapeByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.LandScape> GetLandScapeByNameAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapeName", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapeNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLandScapeNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapesName", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapesNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLandScapesNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapeIdByName", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapeIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetLandScapeIdByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapes", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.LandScape>> GetLandScapesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapeById", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapeByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.LandScape> GetLandScapeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/AddLocation", ReplyAction="http://tempuri.org/InterfaceLocation/AddLocationResponse")]
        System.Threading.Tasks.Task<bool> AddLocationAsync(ServiceReferenceMyPhotos.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/UpdateLocation", ReplyAction="http://tempuri.org/InterfaceLocation/UpdateLocationResponse")]
        System.Threading.Tasks.Task<bool> UpdateLocationAsync(ServiceReferenceMyPhotos.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/DeleteLocation", ReplyAction="http://tempuri.org/InterfaceLocation/DeleteLocationResponse")]
        System.Threading.Tasks.Task<bool> DeleteLocationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationByName", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Location> GetLocationByNameAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationsName", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationsNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLocationsNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationIdByName", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetLocationIdByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocations", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Location>> GetLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationById", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Location> GetLocationByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/AddPerson", ReplyAction="http://tempuri.org/InterfacePerson/AddPersonResponse")]
        System.Threading.Tasks.Task<bool> AddPersonAsync(ServiceReferenceMyPhotos.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/UpdatePerson", ReplyAction="http://tempuri.org/InterfacePerson/UpdatePersonResponse")]
        System.Threading.Tasks.Task<bool> UpdatePersonAsync(ServiceReferenceMyPhotos.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/DeletePerson", ReplyAction="http://tempuri.org/InterfacePerson/DeletePersonResponse")]
        System.Threading.Tasks.Task<bool> DeletePersonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersonByName", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonByNameResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> GetPersonByNameAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPeopleName", ReplyAction="http://tempuri.org/InterfacePerson/GetPeopleNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetPeopleNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersonIdByName", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonIdByNameResponse")]
        System.Threading.Tasks.Task<int> GetPersonIdByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPeople", ReplyAction="http://tempuri.org/InterfacePerson/GetPeopleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Person>> GetPeopleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersonById", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> GetPersonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/AddPhoto", ReplyAction="http://tempuri.org/InterFacePhoto/AddPhotoResponse")]
        System.Threading.Tasks.Task<bool> AddPhotoAsync(ServiceReferenceMyPhotos.Photo photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/UpdatePhoto", ReplyAction="http://tempuri.org/InterFacePhoto/UpdatePhotoResponse")]
        System.Threading.Tasks.Task<bool> UpdatePhotoAsync(ServiceReferenceMyPhotos.Photo photo, int eventId, int landScapeId, int personId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/DeletePhoto", ReplyAction="http://tempuri.org/InterFacePhoto/DeletePhotoResponse")]
        System.Threading.Tasks.Task<bool> DeletePhotoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhoto", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotoAsync(int LocationId, int LandScapeId, int PersonId, int EventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/UpdateIsRemoved", ReplyAction="http://tempuri.org/InterFacePhoto/UpdateIsRemovedResponse")]
        System.Threading.Tasks.Task UpdateIsRemovedAsync(ServiceReferenceMyPhotos.Photo photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotosName", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotosNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetPhotosNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotos", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotoById", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Photo> GetPhotoByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public interface IMyPhotosChannel : ServiceReferenceMyPhotos.IMyPhotos, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1")]
    public partial class MyPhotosClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotos.IMyPhotos>, ServiceReferenceMyPhotos.IMyPhotos
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MyPhotosClient() : 
                base(MyPhotosClient.GetDefaultBinding(), MyPhotosClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMyPhotos.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), MyPhotosClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> AddEventAsync(ServiceReferenceMyPhotos.Event @event)
        {
            return base.Channel.AddEventAsync(@event);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEventAsync(ServiceReferenceMyPhotos.Event @event)
        {
            return base.Channel.UpdateEventAsync(@event);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEventAsync(int id)
        {
            return base.Channel.DeleteEventAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Event> GetEventByNameAsync(string Name)
        {
            return base.Channel.GetEventByNameAsync(Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetEventsNameAsync()
        {
            return base.Channel.GetEventsNameAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Event>> GetEventsAsync()
        {
            return base.Channel.GetEventsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Event> GetEventByIdAsync(int id)
        {
            return base.Channel.GetEventByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> GetEventIdByNameAsync(string name)
        {
            return base.Channel.GetEventIdByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<bool> AddLandScapeAsync(ServiceReferenceMyPhotos.LandScape landScape)
        {
            return base.Channel.AddLandScapeAsync(landScape);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLandScapeAsync(ServiceReferenceMyPhotos.LandScape landScape)
        {
            return base.Channel.UpdateLandScapeAsync(landScape);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLandScapeAsync(int id)
        {
            return base.Channel.DeleteLandScapeAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.LandScape> GetLandScapeByNameAsync(string Name)
        {
            return base.Channel.GetLandScapeByNameAsync(Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLandScapeNameAsync()
        {
            return base.Channel.GetLandScapeNameAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLandScapesNameAsync()
        {
            return base.Channel.GetLandScapesNameAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetLandScapeIdByNameAsync(string name)
        {
            return base.Channel.GetLandScapeIdByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.LandScape>> GetLandScapesAsync()
        {
            return base.Channel.GetLandScapesAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.LandScape> GetLandScapeByIdAsync(int id)
        {
            return base.Channel.GetLandScapeByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddLocationAsync(ServiceReferenceMyPhotos.Location location)
        {
            return base.Channel.AddLocationAsync(location);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLocationAsync(ServiceReferenceMyPhotos.Location location)
        {
            return base.Channel.UpdateLocationAsync(location);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLocationAsync(int id)
        {
            return base.Channel.DeleteLocationAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Location> GetLocationByNameAsync(string Name)
        {
            return base.Channel.GetLocationByNameAsync(Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLocationsNameAsync()
        {
            return base.Channel.GetLocationsNameAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetLocationIdByNameAsync(string name)
        {
            return base.Channel.GetLocationIdByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Location>> GetLocationsAsync()
        {
            return base.Channel.GetLocationsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Location> GetLocationByIdAsync(int id)
        {
            return base.Channel.GetLocationByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddPersonAsync(ServiceReferenceMyPhotos.Person person)
        {
            return base.Channel.AddPersonAsync(person);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePersonAsync(ServiceReferenceMyPhotos.Person person)
        {
            return base.Channel.UpdatePersonAsync(person);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePersonAsync(int id)
        {
            return base.Channel.DeletePersonAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> GetPersonByNameAsync(string Name)
        {
            return base.Channel.GetPersonByNameAsync(Name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetPeopleNameAsync()
        {
            return base.Channel.GetPeopleNameAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetPersonIdByNameAsync(string name)
        {
            return base.Channel.GetPersonIdByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Person>> GetPeopleAsync()
        {
            return base.Channel.GetPeopleAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> GetPersonByIdAsync(int id)
        {
            return base.Channel.GetPersonByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddPhotoAsync(ServiceReferenceMyPhotos.Photo photo)
        {
            return base.Channel.AddPhotoAsync(photo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePhotoAsync(ServiceReferenceMyPhotos.Photo photo, int eventId, int landScapeId, int personId, int locationId)
        {
            return base.Channel.UpdatePhotoAsync(photo, eventId, landScapeId, personId, locationId);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePhotoAsync(int id)
        {
            return base.Channel.DeletePhotoAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotoAsync(int LocationId, int LandScapeId, int PersonId, int EventId)
        {
            return base.Channel.GetPhotoAsync(LocationId, LandScapeId, PersonId, EventId);
        }
        
        public System.Threading.Tasks.Task UpdateIsRemovedAsync(ServiceReferenceMyPhotos.Photo photo)
        {
            return base.Channel.UpdateIsRemovedAsync(photo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetPhotosNameAsync()
        {
            return base.Channel.GetPhotosNameAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Photo>> GetPhotosAsync()
        {
            return base.Channel.GetPhotosAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Photo> GetPhotoByIdAsync(int id)
        {
            return base.Channel.GetPhotoByIdAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMyPhotos))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMyPhotos))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/MyPhotos");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MyPhotosClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMyPhotos);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MyPhotosClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMyPhotos);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMyPhotos,
        }
    }
}
