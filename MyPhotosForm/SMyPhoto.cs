//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotosV2
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        public Event(string Description,string Name)
        {
            this.EventDescription = Description;
            this.EventName = Name;
        }
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EventDescriptionField;
        
        private string EventNameField;
        
        private int IdField;
        
        private MyPhotosV2.Photo[] PhotoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription
        {
            get
            {
                return this.EventDescriptionField;
            }
            set
            {
                this.EventDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName
        {
            get
            {
                return this.EventNameField;
            }
            set
            {
                this.EventNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Photo[] Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Photo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        public Photo(string fullPath, string isMovie, string isRemoved, Location location, LandScape landScape, Event @event, Person person)
        {
            FullPath = fullPath;
            this.isMovie = isMovie;
            this.isRemoved = isRemoved;
            Location = location;
            LandScape = landScape;
            Event = @event;
            Person = person;
        }

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MyPhotosV2.Event EventField;
        
        private int EventIdField;
        
        private string FullPathField;
        
        private int IdField;
        
        private MyPhotosV2.LandScape LandScapeField;
        
        private int LandScapeIdField;
        
        private MyPhotosV2.Location LocationField;
        
        private int LocationIdField;
        
        private MyPhotosV2.Person PersonField;
        
        private int PersonIdField;
        
        private string isMovieField;
        
        private string isRemovedField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Event Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId
        {
            get
            {
                return this.EventIdField;
            }
            set
            {
                this.EventIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullPath
        {
            get
            {
                return this.FullPathField;
            }
            set
            {
                this.FullPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.LandScape LandScape
        {
            get
            {
                return this.LandScapeField;
            }
            set
            {
                this.LandScapeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LandScapeId
        {
            get
            {
                return this.LandScapeIdField;
            }
            set
            {
                this.LandScapeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Location Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId
        {
            get
            {
                return this.LocationIdField;
            }
            set
            {
                this.LocationIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Person Person
        {
            get
            {
                return this.PersonField;
            }
            set
            {
                this.PersonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId
        {
            get
            {
                return this.PersonIdField;
            }
            set
            {
                this.PersonIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isMovie
        {
            get
            {
                return this.isMovieField;
            }
            set
            {
                this.isMovieField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isRemoved
        {
            get
            {
                return this.isRemovedField;
            }
            set
            {
                this.isRemovedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LandScape", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class LandScape : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        public LandScape(string landScapeName, string landScapeDescription)
        {
            LandScapeName = landScapeName;
            LandScapeDescription = landScapeDescription;
        }

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string LandScapeDescriptionField;
        
        private string LandScapeNameField;
        
        private MyPhotosV2.Photo[] PhotoField;

        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandScapeDescription
        {
            get
            {
                return this.LandScapeDescriptionField;
            }
            set
            {
                this.LandScapeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandScapeName
        {
            get
            {
                return this.LandScapeNameField;
            }
            set
            {
                this.LandScapeNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Photo[] Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        public Location(string locationName, string locationDescription, string locationType)
        {
            LocationName = locationName;
            LocationDescription = locationDescription;
            LocationType = locationType;
        }

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string LocationDescriptionField;
        
        private string LocationNameField;
        
        private string LocationTypeField;
        
        private MyPhotosV2.Photo[] PhotoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescription
        {
            get
            {
                return this.LocationDescriptionField;
            }
            set
            {
                this.LocationDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationType
        {
            get
            {
                return this.LocationTypeField;
            }
            set
            {
                this.LocationTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Photo[] Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosV2")]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        public Person(string firstName, string lastName, string age)
        {
            FirstName = firstName;
            LastName = lastName;
            Age = age;
        }

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AgeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private MyPhotosV2.Photo[] PhotoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                this.AgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosV2.Photo[] Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMyPhotos")]
public interface IMyPhotos
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/AddEvent", ReplyAction="http://tempuri.org/InterfaceEvent/AddEventResponse")]
    bool AddEvent(MyPhotosV2.Event @event);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/AddEvent", ReplyAction="http://tempuri.org/InterfaceEvent/AddEventResponse")]
    System.Threading.Tasks.Task<bool> AddEventAsync(MyPhotosV2.Event @event);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/UpdateEvent", ReplyAction="http://tempuri.org/InterfaceEvent/UpdateEventResponse")]
    bool UpdateEvent(MyPhotosV2.Event @event);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/UpdateEvent", ReplyAction="http://tempuri.org/InterfaceEvent/UpdateEventResponse")]
    System.Threading.Tasks.Task<bool> UpdateEventAsync(MyPhotosV2.Event @event);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/DeleteEvent", ReplyAction="http://tempuri.org/InterfaceEvent/DeleteEventResponse")]
    bool DeleteEvent(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/DeleteEvent", ReplyAction="http://tempuri.org/InterfaceEvent/DeleteEventResponse")]
    System.Threading.Tasks.Task<bool> DeleteEventAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventByName", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventByNameResponse")]
    MyPhotosV2.Event GetEventByName(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEventByName", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosV2.Event> GetEventByNameAsync(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEvents", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventsResponse")]
    string[] GetEvents();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceEvent/GetEvents", ReplyAction="http://tempuri.org/InterfaceEvent/GetEventsResponse")]
    System.Threading.Tasks.Task<string[]> GetEventsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/AddLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/AddLandScapeResponse")]
    bool AddLandScape(MyPhotosV2.LandScape landScape);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/AddLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/AddLandScapeResponse")]
    System.Threading.Tasks.Task<bool> AddLandScapeAsync(MyPhotosV2.LandScape landScape);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/UpdateLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/UpdateLandScapeResponse")]
    bool UpdateLandScape(MyPhotosV2.LandScape landScape);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/UpdateLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/UpdateLandScapeResponse")]
    System.Threading.Tasks.Task<bool> UpdateLandScapeAsync(MyPhotosV2.LandScape landScape);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/DeleteLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/DeleteLandScapeResponse")]
    bool DeleteLandScape(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/DeleteLandScape", ReplyAction="http://tempuri.org/InterfaceLandScape/DeleteLandScapeResponse")]
    System.Threading.Tasks.Task<bool> DeleteLandScapeAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapeByName", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapeByNameResponse")]
    MyPhotosV2.LandScape GetLandScapeByName(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapeByName", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapeByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosV2.LandScape> GetLandScapeByNameAsync(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapes", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapesResponse")]
    string[] GetLandScapes();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLandScape/GetLandScapes", ReplyAction="http://tempuri.org/InterfaceLandScape/GetLandScapesResponse")]
    System.Threading.Tasks.Task<string[]> GetLandScapesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/AddLocation", ReplyAction="http://tempuri.org/InterfaceLocation/AddLocationResponse")]
    bool AddLocation(MyPhotosV2.Location location);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/AddLocation", ReplyAction="http://tempuri.org/InterfaceLocation/AddLocationResponse")]
    System.Threading.Tasks.Task<bool> AddLocationAsync(MyPhotosV2.Location location);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/UpdateLocation", ReplyAction="http://tempuri.org/InterfaceLocation/UpdateLocationResponse")]
    bool UpdateLocation(MyPhotosV2.Location location);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/UpdateLocation", ReplyAction="http://tempuri.org/InterfaceLocation/UpdateLocationResponse")]
    System.Threading.Tasks.Task<bool> UpdateLocationAsync(MyPhotosV2.Location location);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/DeleteLocation", ReplyAction="http://tempuri.org/InterfaceLocation/DeleteLocationResponse")]
    bool DeleteLocation(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/DeleteLocation", ReplyAction="http://tempuri.org/InterfaceLocation/DeleteLocationResponse")]
    System.Threading.Tasks.Task<bool> DeleteLocationAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationByName", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationByNameResponse")]
    MyPhotosV2.Location GetLocationByName(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocationByName", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosV2.Location> GetLocationByNameAsync(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocations", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationsResponse")]
    string[] GetLocations();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceLocation/GetLocations", ReplyAction="http://tempuri.org/InterfaceLocation/GetLocationsResponse")]
    System.Threading.Tasks.Task<string[]> GetLocationsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/AddPerson", ReplyAction="http://tempuri.org/InterfacePerson/AddPersonResponse")]
    bool AddPerson(MyPhotosV2.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/AddPerson", ReplyAction="http://tempuri.org/InterfacePerson/AddPersonResponse")]
    System.Threading.Tasks.Task<bool> AddPersonAsync(MyPhotosV2.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/UpdatePerson", ReplyAction="http://tempuri.org/InterfacePerson/UpdatePersonResponse")]
    bool UpdatePerson(MyPhotosV2.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/UpdatePerson", ReplyAction="http://tempuri.org/InterfacePerson/UpdatePersonResponse")]
    System.Threading.Tasks.Task<bool> UpdatePersonAsync(MyPhotosV2.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/DeletePerson", ReplyAction="http://tempuri.org/InterfacePerson/DeletePersonResponse")]
    bool DeletePerson(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/DeletePerson", ReplyAction="http://tempuri.org/InterfacePerson/DeletePersonResponse")]
    System.Threading.Tasks.Task<bool> DeletePersonAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersonByName", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonByNameResponse")]
    MyPhotosV2.Person GetPersonByName(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersonByName", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosV2.Person> GetPersonByNameAsync(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersons", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonsResponse")]
    string[] GetPersons();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePerson/GetPersons", ReplyAction="http://tempuri.org/InterfacePerson/GetPersonsResponse")]
    System.Threading.Tasks.Task<string[]> GetPersonsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/AddPhoto", ReplyAction="http://tempuri.org/InterFacePhoto/AddPhotoResponse")]
    bool AddPhoto(MyPhotosV2.Photo photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/AddPhoto", ReplyAction="http://tempuri.org/InterFacePhoto/AddPhotoResponse")]
    System.Threading.Tasks.Task<bool> AddPhotoAsync(MyPhotosV2.Photo photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/UpdatePhoto", ReplyAction="http://tempuri.org/InterFacePhoto/UpdatePhotoResponse")]
    bool UpdatePhoto(MyPhotosV2.Photo photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/UpdatePhoto", ReplyAction="http://tempuri.org/InterFacePhoto/UpdatePhotoResponse")]
    System.Threading.Tasks.Task<bool> UpdatePhotoAsync(MyPhotosV2.Photo photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/DeletePhoto", ReplyAction="http://tempuri.org/InterFacePhoto/DeletePhotoResponse")]
    bool DeletePhoto(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/DeletePhoto", ReplyAction="http://tempuri.org/InterFacePhoto/DeletePhotoResponse")]
    System.Threading.Tasks.Task<bool> DeletePhotoAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotoByName", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotoByNameResponse")]
    MyPhotosV2.Photo GetPhotoByName(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotoByName", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotoByNameResponse")]
    System.Threading.Tasks.Task<MyPhotosV2.Photo> GetPhotoByNameAsync(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotos", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotosResponse")]
    string[] GetPhotos();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterFacePhoto/GetPhotos", ReplyAction="http://tempuri.org/InterFacePhoto/GetPhotosResponse")]
    System.Threading.Tasks.Task<string[]> GetPhotosAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMyPhotosChannel : IMyPhotos, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MyPhotosClient : System.ServiceModel.ClientBase<IMyPhotos>, IMyPhotos
{
    
    public MyPhotosClient()
    {
    }
    
    public MyPhotosClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MyPhotosClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MyPhotosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool AddEvent(MyPhotosV2.Event @event)
    {
        return base.Channel.AddEvent(@event);
    }
    
    public System.Threading.Tasks.Task<bool> AddEventAsync(MyPhotosV2.Event @event)
    {
        return base.Channel.AddEventAsync(@event);
    }
    
    public bool UpdateEvent(MyPhotosV2.Event @event)
    {
        return base.Channel.UpdateEvent(@event);
    }
    
    public System.Threading.Tasks.Task<bool> UpdateEventAsync(MyPhotosV2.Event @event)
    {
        return base.Channel.UpdateEventAsync(@event);
    }
    
    public bool DeleteEvent(int id)
    {
        return base.Channel.DeleteEvent(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeleteEventAsync(int id)
    {
        return base.Channel.DeleteEventAsync(id);
    }
    
    public MyPhotosV2.Event GetEventByName(string Name)
    {
        return base.Channel.GetEventByName(Name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosV2.Event> GetEventByNameAsync(string Name)
    {
        return base.Channel.GetEventByNameAsync(Name);
    }
    
    public string[] GetEvents()
    {
        return base.Channel.GetEvents();
    }
    
    public System.Threading.Tasks.Task<string[]> GetEventsAsync()
    {
        return base.Channel.GetEventsAsync();
    }
    
    public bool AddLandScape(MyPhotosV2.LandScape landScape)
    {
        return base.Channel.AddLandScape(landScape);
    }
    
    public System.Threading.Tasks.Task<bool> AddLandScapeAsync(MyPhotosV2.LandScape landScape)
    {
        return base.Channel.AddLandScapeAsync(landScape);
    }
    
    public bool UpdateLandScape(MyPhotosV2.LandScape landScape)
    {
        return base.Channel.UpdateLandScape(landScape);
    }
    
    public System.Threading.Tasks.Task<bool> UpdateLandScapeAsync(MyPhotosV2.LandScape landScape)
    {
        return base.Channel.UpdateLandScapeAsync(landScape);
    }
    
    public bool DeleteLandScape(int id)
    {
        return base.Channel.DeleteLandScape(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeleteLandScapeAsync(int id)
    {
        return base.Channel.DeleteLandScapeAsync(id);
    }
    
    public MyPhotosV2.LandScape GetLandScapeByName(string Name)
    {
        return base.Channel.GetLandScapeByName(Name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosV2.LandScape> GetLandScapeByNameAsync(string Name)
    {
        return base.Channel.GetLandScapeByNameAsync(Name);
    }
    
    public string[] GetLandScapes()
    {
        return base.Channel.GetLandScapes();
    }
    
    public System.Threading.Tasks.Task<string[]> GetLandScapesAsync()
    {
        return base.Channel.GetLandScapesAsync();
    }
    
    public bool AddLocation(MyPhotosV2.Location location)
    {
        return base.Channel.AddLocation(location);
    }
    
    public System.Threading.Tasks.Task<bool> AddLocationAsync(MyPhotosV2.Location location)
    {
        return base.Channel.AddLocationAsync(location);
    }
    
    public bool UpdateLocation(MyPhotosV2.Location location)
    {
        return base.Channel.UpdateLocation(location);
    }
    
    public System.Threading.Tasks.Task<bool> UpdateLocationAsync(MyPhotosV2.Location location)
    {
        return base.Channel.UpdateLocationAsync(location);
    }
    
    public bool DeleteLocation(int id)
    {
        return base.Channel.DeleteLocation(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeleteLocationAsync(int id)
    {
        return base.Channel.DeleteLocationAsync(id);
    }
    
    public MyPhotosV2.Location GetLocationByName(string Name)
    {
        return base.Channel.GetLocationByName(Name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosV2.Location> GetLocationByNameAsync(string Name)
    {
        return base.Channel.GetLocationByNameAsync(Name);
    }
    
    public string[] GetLocations()
    {
        return base.Channel.GetLocations();
    }
    
    public System.Threading.Tasks.Task<string[]> GetLocationsAsync()
    {
        return base.Channel.GetLocationsAsync();
    }
    
    public bool AddPerson(MyPhotosV2.Person person)
    {
        return base.Channel.AddPerson(person);
    }
    
    public System.Threading.Tasks.Task<bool> AddPersonAsync(MyPhotosV2.Person person)
    {
        return base.Channel.AddPersonAsync(person);
    }
    
    public bool UpdatePerson(MyPhotosV2.Person person)
    {
        return base.Channel.UpdatePerson(person);
    }
    
    public System.Threading.Tasks.Task<bool> UpdatePersonAsync(MyPhotosV2.Person person)
    {
        return base.Channel.UpdatePersonAsync(person);
    }
    
    public bool DeletePerson(int id)
    {
        return base.Channel.DeletePerson(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeletePersonAsync(int id)
    {
        return base.Channel.DeletePersonAsync(id);
    }
    
    public MyPhotosV2.Person GetPersonByName(string Name)
    {
        return base.Channel.GetPersonByName(Name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosV2.Person> GetPersonByNameAsync(string Name)
    {
        return base.Channel.GetPersonByNameAsync(Name);
    }
    
    public string[] GetPersons()
    {
        return base.Channel.GetPersons();
    }
    
    public System.Threading.Tasks.Task<string[]> GetPersonsAsync()
    {
        return base.Channel.GetPersonsAsync();
    }
    
    public bool AddPhoto(MyPhotosV2.Photo photo)
    {
        return base.Channel.AddPhoto(photo);
    }
    
    public System.Threading.Tasks.Task<bool> AddPhotoAsync(MyPhotosV2.Photo photo)
    {
        return base.Channel.AddPhotoAsync(photo);
    }
    
    public bool UpdatePhoto(MyPhotosV2.Photo photo)
    {
        return base.Channel.UpdatePhoto(photo);
    }
    
    public System.Threading.Tasks.Task<bool> UpdatePhotoAsync(MyPhotosV2.Photo photo)
    {
        return base.Channel.UpdatePhotoAsync(photo);
    }
    
    public bool DeletePhoto(int id)
    {
        return base.Channel.DeletePhoto(id);
    }
    
    public System.Threading.Tasks.Task<bool> DeletePhotoAsync(int id)
    {
        return base.Channel.DeletePhotoAsync(id);
    }
    
    public MyPhotosV2.Photo GetPhotoByName(string Name)
    {
        return base.Channel.GetPhotoByName(Name);
    }
    
    public System.Threading.Tasks.Task<MyPhotosV2.Photo> GetPhotoByNameAsync(string Name)
    {
        return base.Channel.GetPhotoByNameAsync(Name);
    }
    
    public string[] GetPhotos()
    {
        return base.Channel.GetPhotos();
    }
    
    public System.Threading.Tasks.Task<string[]> GetPhotosAsync()
    {
        return base.Channel.GetPhotosAsync();
    }
}
